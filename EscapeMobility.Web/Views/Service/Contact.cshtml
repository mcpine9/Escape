@using Recaptcha.Web
@using Recaptcha.Web.Mvc
@model EscapeMobility.Web.Models.ContactFormViewModel
@{
    ViewBag.Title = "Contact";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section pagebreadcrumbs
{
    <div id="breadcrumbs">
        @Html.ActionLink("Home", MVC.Home.Index(), null)
        @Html.ActionLink("Customer Service", MVC.Service.Index(), null)
        @ViewBag.Title
    </div>
}
@section pagecss
{
    <link href="~/Content/styles/app/formstyle.css" type="text/css" rel="stylesheet">
}
<div id="leftMenu" class="all-open">
    @Html.Partial("_MainLeftMenu")
</div>
<div id="mainContent" data-curpage="contact">
    <h1 class="pageTitle">Contact</h1>

    <div class="clear"></div>
    We do our utmost best to provide accurate&nbsp;information via our website, about our Company and our products and services. If you have any further comments or questions, please notify us, by contacting our advisers, whom are always pleased to&nbsp;help you.<br>
    <br>
    <h2>Escape Mobility Company USA, LLC :</h2>
    <table>
        <tbody>
            <tr>
                <td>
                    T: 818 827 7115 <br>
                    F:&nbsp;818 279 2274&nbsp; <br>
                    E:&nbsp;<a class="ApplyClass" href="mailto:usa@escape-mobility.com">usa@escape-mobility.com</a> <br>
                </td>
                <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                <td>
                    3500 W Olive Ave Ste 300&nbsp;<br>
                    Burbank, CA 91505<br>
                    <br>
                </td>
            </tr>
        </tbody>
    </table>
    <br>
    <img src="~/Content/images/Contact_foto_Marlie.png">
    <h2></h2>
    <h2>We can be reached in the following ways:</h2>
    <ul>
        <li>By telephone or by fax.&nbsp;</li>
        <li>By asking us to call you back at a later time, by clicking the ‘Call me back' button.&nbsp;</li>
        <li>By completing the form below. </li>
    </ul>
    <br>
    Fields marked with an asterisk (*) are required fields, giving us the chance&nbsp;to inform you as accurately as possible. <br>
    <br>
    <strong>Please do not use the response form for acquisition purposes.</strong> <br>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @{
        if (ViewBag.ContactExistsMessage != null)
        {
            <span class="field-validation-error text-danger">@Html.Raw(ViewBag.ContactExistsMessage.ToString())</span>
        }
            }

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Company, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Company, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zip, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label  col-md-4" })
                <div class=" col-md-7">
                    @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", columns=50, rows=5} )
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.Recaptcha()
            <div class="form-group">
                <div class="col-md-offset-5  col-md-7">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
            

        </div>
    }
    </div>